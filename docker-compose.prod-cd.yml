services:
  dbprod:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: azerty
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080
    depends_on:
      dbprod:
        condition: service_healthy

  back:
    image: wildcarbon/wildcarbon
    ports:
      - 5050:5050
    command: [sh, -cx, 'npm run build && npm run start']
    volumes:
      - ./back/back/src/views:/app/build/views
    environment:
      - DB=dbprod
    env_file:
      - .env
    depends_on:
      dbprod:
        condition: service_healthy
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:5050'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 2s

  front:
    image: wildcarbon/wildcarbonfront
    volumes:
      - web-client-build:/app/build
    environment:
      - REACT_APP_DB=dbprod
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      back:
        condition: service_healthy
    command:
      [
        sh,
        -cx,
        'npm run build --production && npm install -g serve && serve -s build',
      ]

  nginx:
    image: nginx:1.21.3
    depends_on:
      - front
      - back
    restart: always
    ports:
      - ${GATEWAY_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - web-client-build:/web-client-build
      - ./logs:/var/log/nginx
volumes:
  web-client-build:
  db-data:
